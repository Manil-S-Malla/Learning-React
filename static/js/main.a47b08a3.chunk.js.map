{"version":3,"sources":["logo.svg","components/navbar.jsx","components/controlled counter.jsx","components/counters.jsx","App.js","reportWebVitals.js","index.js"],"names":["NavBar","total","console","log","class","className","Counter","state","imageUrl","tags","prevProps","prevState","count","counterClasses","this","props","counter","id","onIncrement","onDecrement","onDelete","btnStyle","fontSize","fontWeight","width","textAlign","padding","style","display","flexDirection","margin","src","alt","justifyContent","marginLeft","children","getCounterClasses","onClick","length","map","tag","index","Component","Counters","onAdd","onReset","counters","Fragment","App","handleDelete","counterId","forEach","newCounters","filter","setState","handleAdd","newId","handleReset","handleIncrement","handleDecrement","isGreaterThan0","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a47b08a3.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { Component } from 'react'\r\n\r\nconst NavBar = ({total}) => {\r\n    console.log('Mount > NavBar - Render.');\r\n    \r\n    return ( \r\n        <nav class=\"navbar navbar-light bg-light\">\r\n            <span class=\"navbar-brand mb-0 h1\">\r\n                Total Count{' '}\r\n                <span className=\"badge badge-pill badge-secondary\">\r\n                    {total}\r\n                </span>\r\n            </span>\r\n        </nav>\r\n    );\r\n}\r\n \r\nexport default NavBar;","import React, { Component } from 'react';\r\n\r\n\r\nclass Counter extends Component {\r\n    state = {\r\n        imageUrl: 'https://picsum.photos/200',\r\n        tags: ['Tag 1', 'Tag 2', 'Tag 3']\r\n    };\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        console.log(`Update > Counter - componentDidUpdate.\\n\\tPrevious Props : ${prevProps}\\n\\tPrevious State : ${prevState}`);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        console.log('UnMount > Counter - componentDidUnmount.');\r\n    }\r\n\r\n    getCounterClasses(count) {\r\n        let counterClasses = \"badge m-2 badge-\";\r\n        counterClasses += count === 0 ? \"warning\" : \"primary\";\r\n        return counterClasses;\r\n    }\r\n\r\n    render() { \r\n        console.log('Mount > Counter - Render.');\r\n\r\n        const {imageUrl, tags} = this.state;\r\n        \r\n        const {count, id} = this.props.counter\r\n        const {onIncrement, onDecrement, onDelete} = this.props;\r\n        \r\n        const mainContainerStyle= {\r\n            display: 'flex',\r\n            flexDirection: 'row',\r\n            margin: 5\r\n        }\r\n\r\n        const containerStyle= {\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            justifyContent: 'center',\r\n            //alignItems: 'center',\r\n        }\r\n\r\n        const subContainerStyle= {\r\n            flexDirection: 'row',\r\n        }\r\n\r\n        const counterStyle= {\r\n            fontSize: 15,\r\n            fontWeight: 'bold',\r\n            textAlign: 'center',\r\n            padding: 5,\r\n        }\r\n\r\n        const btnStyle= {\r\n            fontSize: 10,\r\n            fontWeight: 'bold',\r\n            width: 25,\r\n            textAlign: 'center',\r\n            padding: 5,\r\n        }\r\n\r\n        return (\r\n            <div style= {mainContainerStyle}>\r\n                <img src= {imageUrl} alt= \"\" />\r\n                \r\n                <div style= {containerStyle}>\r\n                    <div style= {{marginLeft: 5,}}>\r\n                        {this.props.children}\r\n                    </div>\r\n\r\n                    <div style= {subContainerStyle}>\r\n                        <span style= {counterStyle} className= {this.getCounterClasses(count)}>{ count === 0 ? 'Zero' : count}</span>\r\n                        <button \r\n                            onClick= {() => onIncrement(id)} \r\n                            style= {btnStyle} \r\n                            className= \"btn btn-outline-secondary btn-sm rounded m-2\"\r\n                        >+</button>\r\n                        <button \r\n                            onClick= {() => onDecrement(id)} \r\n                            style= {btnStyle} \r\n                            className= \"btn btn-outline-secondary btn-sm rounded m-2\"\r\n                        >-</button>\r\n                        <button \r\n                            onClick= {() => onDelete(id)} \r\n                            className=\"btn btn-danger btn-sm m-2\"\r\n                        >\r\n                            Delete\r\n                        </button>\r\n                    </div>\r\n                   \r\n                    {\r\n                        tags.length > 0 ? \r\n                        <ul>\r\n                            {\r\n                                tags.map( (tag, index) => <li key= {index}>\r\n                                        {tag}\r\n                                    </li>)\r\n                            }\r\n                        </ul>:\r\n                        'No tags in the list.'\r\n                    }\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n \r\nexport default Counter;","import React, { Component } from 'react';\r\nimport Counter from './controlled counter';\r\n\r\nclass Counters extends Component {\r\n\r\n    render() { \r\n        console.log('Mount > Counters - Render.');\r\n        const {onAdd, onDelete, onReset, onIncrement, onDecrement, counters} = this.props;\r\n        return (\r\n            <React.Fragment>\r\n                <button \r\n                    onClick= {onAdd}\r\n                    style= {{margin: 5,}} \r\n                    className=\"btn btn-success btn-sm m-2\"\r\n                >Add</button>\r\n                <button \r\n                    onClick= {onReset}\r\n                    style= {{margin: 5,}} \r\n                    className=\"btn btn-danger btn-sm m-2\"\r\n                >Reset</button>\r\n                {\r\n                    counters.map((counter, index) => \r\n                        <Counter \r\n                            key= {index} \r\n                            onDelete= {onDelete} \r\n                            onIncrement = {onIncrement}\r\n                            onDecrement = {onDecrement}\r\n                            counter= {counter} \r\n                        >\r\n                            <h3>Counter #{counter.id}</h3>\r\n                        </Counter>)\r\n                }\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n \r\nexport default Counters;","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport NavBar from './components/navbar'\nimport Counters from './components/counters';\n\nclass App extends Component {\n  state = { \n    total: 0,\n    counters: [\n        {id: 0, count: 0},\n    ] \n  }\n\n  constructor() {\n    super();\n    console.log('Mount > App - Constructor.');\n  }\n\n  componentDidMount() {\n    console.log('Mount > App- componentDidMount.');\n  }\n\n  handleDelete = (counterId) => {\n      let count = 0;\n      this.state.counters.forEach(counter => {\n          if (counter.id !== counterId){\n              count += counter.count;\n          }\n      })\n      const newCounters = this.state.counters.filter(counter => counter.id !== counterId);\n      this.setState({ total: count, counters: newCounters });\n  }\n\n  handleAdd = () => {\n      let newId = 0;\n      if (this.state.counters.length > 0) {\n          newId = this.state.counters[this.state.counters.length - 1].id + 1; \n      }\n      const newCounters = {id: newId, count: 0}\n      this.setState({total: this.state.total, counters: [...this.state.counters, newCounters]})\n  }\n\n  handleReset = () => {\n      const newCounters = this.state.counters.map(counter => {\n          counter.count = 0;\n          return counter;\n      });\n      this.setState({total: 0,  counters: newCounters });\n  }\n\n  handleIncrement = (counterId) => {\n      const newCounters = this.state.counters.map(counter => {\n          if(counterId === counter.id)\n              counter.count++;\n          return counter;\n      });\n      this.setState({ total: this.state.total + 1, counters: newCounters });\n  }\n\n  handleDecrement = (counterId) => {\n      let isGreaterThan0 = false;\n      const newCounters = this.state.counters.map(counter => {\n          if(counterId === counter.id && counter.count > 0){\n              counter.count--;\n              isGreaterThan0 = true;\n          }\n          return counter;\n      });\n      if(isGreaterThan0){\n          this.setState({ total: this.state.total - 1, counters: newCounters });\n      }\n  }\n\n  render() {\n    console.log('Mount > App - Render.');\n    return (\n      <React.Fragment>\n        <NavBar total = {this.state.total}/>\n        <main className= \"container\">\n          <Counters \n            onAdd = {this.handleAdd}\n            onDelete = {this.handleDelete}\n            onReset = {this.handleReset}\n            onIncrement = {this.handleIncrement}\n            onDecrement = {this.handleDecrement}\n            counters = {this.state.counters}\n          />\n        </main>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}